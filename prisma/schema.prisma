generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model corporate_recruiter {
  id         String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  user_id    String?  @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  user       user?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model mentor {
  id                      String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  user_id                 String?  @db.Uuid
  professional_background String?  @db.VarChar(255)
  expertise               String?  @db.VarChar(255)
  created_at              DateTime @default(now()) @db.Timestamp(6)
  updated_at              DateTime @default(now()) @db.Timestamp(6)
  user                    user?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model organization {
  id          String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  description String?  @db.VarChar(255)
  image       String?  @db.VarChar(255)
  name        String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  user_id     String   @db.Uuid
  tenant_id   String   @db.VarChar(255)
  user        user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model student {
  id                  String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  user_id             String?  @db.Uuid
  academic_background String?  @db.VarChar(255)
  career_aspirations  String?  @db.VarChar(255)
  created_at          DateTime @default(now()) @db.Timestamp(6)
  updated_at          DateTime @default(now()) @db.Timestamp(6)
  user                user?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id                  String                @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email               String                @unique @db.VarChar(255)
  firstName           String?               @db.VarChar(255)
  lastName            String?               @db.VarChar(255)
  roq_user_id         String                @db.VarChar(255)
  tenant_id           String                @db.VarChar(255)
  created_at          DateTime              @default(now()) @db.Timestamp(6)
  updated_at          DateTime              @default(now()) @db.Timestamp(6)
  corporate_recruiter corporate_recruiter[]
  mentor              mentor[]
  organization        organization[]
  student             student[]
}
